<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.foldright.auto-pipeline</groupId>
		<artifactId>auto-pipeline-parent</artifactId>
		<version>0.3.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>auto-pipeline-processor</artifactId>
	<name>${project.artifactId}</name>
	<description>auto-pipeline is a source code generator that auto generate the component's pipeline.</description>
	<url>https://github.com/foldright/auto-pipeline</url>
	<inceptionYear>2021</inceptionYear>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:foldright/auto-pipeline.git</connection>
		<developerConnection>scm:git:git@github.com:foldright/auto-pipeline.git</developerConnection>
		<url>https://github.com/foldright/auto-pipeline</url>
	</scm>

	<dependencies>
		<dependency>
			<groupId>com.foldright.auto-pipeline</groupId>
			<artifactId>auto-pipeline-annotations</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup</groupId>
			<artifactId>javapoet</artifactId>
		</dependency>
		<!-- Testing libs -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.tschuchortdev</groupId>
			<artifactId>kotlin-compile-testing</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>gen-doc</id>
			<!--
			Profiles are not inherited from parent pom
			see: https://stackoverflow.com/questions/46681281/maven-active-by-default-profile-in-parent-does-not-propagate-to-children
			-->
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- use dokka-maven-plugin to generate javadoc for kotlin project -->
					<!-- see: https://kotlin.github.io/dokka/1.6.10/user_guide/maven/usage/ -->
					<plugin>
						<groupId>org.jetbrains.dokka</groupId>
						<artifactId>dokka-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>javadocJar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<jdkVersion>${dokka.link.jdk.version}</jdkVersion>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>add-java-open-options-for-jdk16</id>
			<activation>
				<jdk>[16,)</jdk>
			</activation>
			<properties>
				<!--
					Java 16 compatibility - kotlin-compile-testing
					https://github.com/tschuchortdev/kotlin-compile-testing#java-16-compatibility

					Maven Surefire Plugin â€“ surefire:test
						https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#argLine
					Append the value of argLine param in maven-surefire-plugin
						https://stackoverflow.com/questions/46489455
				-->
				<argLine>
					--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED
					--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED
				</argLine>
			</properties>
		</profile>
	</profiles>
</project>
